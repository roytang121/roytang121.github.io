{"version":3,"file":"component---src-pages-index-js-af5fa2ca3d0369a46e0c.js","mappings":"iKAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,+BACb,gBAAC,EAAAC,EAAD,CACED,UAAU,eACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,IAAI,kBARN,uBAWCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uBAAKT,UAAU,QACb,sBAAIA,UAAU,WAAWJ,EAAOa,MAChC,qBAAGT,UAAU,0BAAyBJ,MAAAA,OAAA,EAAAA,EAAQc,UAAW,MACzD,qBAAGV,UAAU,+BAA8BJ,MAAAA,OAAA,EAAAA,EAAQe,WAAY,U,wHCDzE,EAtC0B,WACxB,IAeMC,GAfOjB,EAAAA,EAAAA,gBAAe,cAeCE,KAAKC,aAAae,QAE/C,OACE,uBAAKb,UAAU,0BACb,sBAAIA,UAAU,QAAd,sBACA,uBAAKA,UAAU,gBACZY,EAASE,KAAI,SAACC,EAAMC,GAAP,OACZ,uBAAKhB,UAAU,kBAAkBiB,IAAG,QAAUD,GAC5C,uBAAKhB,UAAU,oCAAoCe,EAAKG,MACxD,uBAAKlB,UAAU,cACb,uBAAKA,UAAU,iBACb,2BAAMe,EAAKI,OACX,uBAAKnB,UAAU,mCAAmCe,EAAKK,QAAvD,MAAmEL,EAAKM,mBC4BxF,EA3DkB,SAAC,GAAwB,IAAD,EAArB3B,EAAqB,EAArBA,KAAM2B,EAAe,EAAfA,SACnBC,GAAY,UAAA5B,EAAKG,KAAKC,oBAAV,eAAwBqB,QAAxB,QACZI,EAAQ7B,EAAK8B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQL,SAAUA,EAAUF,MAAOG,GACjC,gBAAC,IAAD,CAAKH,MAAM,SACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQE,SAAUA,EAAUF,MAAOG,GACjC,gBAAC,IAAD,CAAKH,MAAM,SACX,gBAAC,IAAD,MACA,gBAAC,EAAD,MACA,sBAAIQ,MAAO,CAAEC,UAAU,SACpBL,EAAMT,KAAI,SAAAe,GACT,IAAMV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAEpD,OACE,sBAAIf,IAAKY,EAAKE,OAAOC,MACnB,2BACEhC,UAAU,iBACViC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OACnC,wBAAMA,SAAS,YAAYlB,KAG/B,6BAAQU,EAAKC,YAAYQ,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/bio.tsx","webpack://gatsby-starter-blog/./src/components/working.tsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            summary2\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"flex items-center mb-4 mt-8\">\n      <StaticImage\n        className=\"rounded-full\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/maruko.png\"\n        width={92}\n        height={92}\n        quality={100}\n        alt=\"Profile picture\"\n        // imgStyle={{ borderRadius: \"100%\" }}\n      />\n      {author?.name && (\n        <div className=\"px-4\">\n          <h1 className=\"text-lg\">{author.name}</h1>\n          <p className=\"text-xs text-gray-400\">{author?.summary || null}</p>\n          <p className=\"text-xs text-gray-400 pt-2\">{author?.summary2 || null}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst WorkingExperience = () => {\n  const data = useStaticQuery(graphql`\n    query WorkingQuery {\n      site {\n        siteMetadata {\n          working {\n            company\n            title\n            time\n            location\n          }\n        }\n      }\n    }\n  `)\n\n  const workings: any[] = data.site.siteMetadata.working\n\n  return (\n    <div className=\"items-center mb-4 mt-8\">\n      <h1 className=\"pb-8\">Working Experience</h1>\n      <div className=\"table w-full\">\n        {workings.map((work, i) => (\n          <div className=\"table-row-group\" key={`work-${i}`}>\n            <div className=\"table-cell text-gray-400 text-xs\">{work.time}</div>\n            <div className=\"table-cell\">\n              <div className=\"flex flex-col\">\n                <div>{work.title}</div>\n                <div className=\"text-gray-300 text-xs pt-1 pb-6\">{work.company} Â· {work.location}</div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default WorkingExperience\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport WorkingExperience from \"../components/working\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Blog\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Blog\" />\n      <Bio />\n      <WorkingExperience />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","summary2","workings","working","map","work","i","key","time","title","company","location","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","post","frontmatter","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}